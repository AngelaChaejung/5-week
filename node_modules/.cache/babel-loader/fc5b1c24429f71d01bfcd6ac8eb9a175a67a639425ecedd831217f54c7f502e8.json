{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null\n};\nexport const __getPosts = createAsyncThunk(\"getPosts\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/posts\");\n    console.log(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __addPost = createAsyncThunk(\"addPost\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.post(\"http://localhost:3001/posts\", payload);\n    console.log(data);\n    return thunkAPI.fulfillWithValue(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [__getPosts.pending]: state => {\n      state.isLoading = true;\n    },\n    [__getPosts.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n    },\n    [__getPosts.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [__addPost.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n    },\n    [__addPost.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getPosts,\n  addPost,\n  deletePost\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","isLoading","error","__getPosts","payload","thunkAPI","data","get","console","log","rejectWithValue","__addPost","post","fulfillWithValue","postsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","rejected","getPosts","addPost","deletePost","actions","reducer"],"sources":["/Users/angela/assignment2/src/redux/modules/postsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null,\n};\nexport const __getPosts = createAsyncThunk(\n  \"getPosts\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/posts\");\n      console.log(data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const __addPost = createAsyncThunk(\n  \"addPost\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.post(\"http://localhost:3001/posts\", payload);\n      console.log(data);\n      return thunkAPI.fulfillWithValue(data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [__getPosts.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__getPosts.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n    },\n    [__getPosts.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [__addPost.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n    },\n    [__addPost.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\nexport const { getPosts, addPost, deletePost } = postsSlice.actions;\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AACD,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,UAAU,EACV,OAAOO,OAAO,EAAEC,QAAQ,KAAK;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;IAC3DC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,OAAOG,QAAQ,CAACK,eAAe,CAACR,KAAK,CAAC;EACxC;AACF,CAAC,CACF;AACD,OAAO,MAAMS,SAAS,GAAGd,gBAAgB,CACvC,SAAS,EACT,OAAOO,OAAO,EAAEC,QAAQ,KAAK;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAER,OAAO,CAAC;IACrEI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,OAAOD,QAAQ,CAACQ,gBAAgB,CAACP,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,OAAOG,QAAQ,CAACK,eAAe,CAACR,KAAK,CAAC;EACxC;AACF,CAAC,CACF;AAED,OAAO,MAAMY,UAAU,GAAGlB,WAAW,CAAC;EACpCmB,IAAI,EAAE,OAAO;EACbhB,YAAY;EACZiB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACd,UAAU,CAACe,OAAO,GAAIC,KAAK,IAAK;MAC/BA,KAAK,CAAClB,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACE,UAAU,CAACiB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAAClB,SAAS,GAAG,KAAK;MACvBkB,KAAK,CAACnB,KAAK,GAAGqB,MAAM,CAACjB,OAAO;IAC9B,CAAC;IACD,CAACD,UAAU,CAACmB,QAAQ,GAAG,CAACH,KAAK,EAAEE,MAAM,KAAK;MACxCF,KAAK,CAAClB,SAAS,GAAG,KAAK;MACvBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACjB,OAAO;IAC9B,CAAC;IACD,CAACO,SAAS,CAACS,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxCF,KAAK,CAAClB,SAAS,GAAG,KAAK;MACvBkB,KAAK,CAACnB,KAAK,GAAGqB,MAAM,CAACjB,OAAO;IAC9B,CAAC;IACD,CAACO,SAAS,CAACW,QAAQ,GAAG,CAACH,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAAClB,SAAS,GAAG,KAAK;MACvBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACjB,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEmB,QAAQ;EAAEC,OAAO;EAAEC;AAAW,CAAC,GAAGX,UAAU,CAACY,OAAO;AACnE,eAAeZ,UAAU,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}